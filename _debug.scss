/**
 * Displays an error or warning message
 * @param  {String} $message Error message
 * @url http://www.sitepoint.com/using-error-responsibly-in-sass/
 */
@mixin log($message) {
  /**
   * you might know that the feature-exists(..) function has only been introduced in Sass 3.3. It does not cover Sass 3.2! Well, thatâ€™s part true. In Sass 3.2, feature-exists('at-error') gets evaluated as a string which is truthy. By adding == true, we make sure that Sass 3.2 is not entering this condition, and moves to the @warn version.
   */
  @if feature-exists('at-error') == true {
    @error $message;
  } @else {
    @warn $message;
  }
}

/*
 * Reporting mixins
 * ======
 *
 * Error logging and other best-practices
 *
 * Tips can be found here
 *  + http://www.sitepoint.com/using-sasss-error-warn-and-debug-directives/
 */

/**
 * Error logging with fallback for SASS 3.2 (?)
 * @param  {String} $message The error message
 * @example "@include log('Oops, something is wrong with what you just did!');"
 * @url http://www.sitepoint.com/using-error-responsibly-in-sass/
 * @author: Hugo Giraudel
 */
@mixin error-log($message) {
  // in sass 3.2, this returns true although feature-exists is not fully supported until sass 3.3
  @if feature-exists('at-error') == true {
    @error $message;
  } @else {
    @warn $message;
    // Because functions cannot be called anywhere in Sass,
  // we need to hack the call in a dummy condition.
    @if noop() {}
  }
}