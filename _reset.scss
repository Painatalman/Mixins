////
/// Mixins for general resetting purposes
/// Mixins for resetting styles
////

/// Reset Lists
/// Removes default bullet and padding from a list (to be used in ul elements)
/// @deprecated This mixin will be moved to the lists file
/// @group resets
@mixin list-reset($padding-left: 0) {
  list-style-type: none;
  padding-left: $padding-left;
}

/// Reset style states
/// Applies all rules inside a declaration to its selector and to all
/// combinations of it concatenated with items in a set of pseudoclasses.
/// This set pseudoclasses is provided through a parameter.
/// For each state provided, the mixin joins the ampersand with the psedoclass indicator ':'.
/// They are then concatenated to the main selector by commas
/// @param {Set of Strings} $states - the pseudoclasses the selector will be joined with in order to create the selector
/// @group Resets
/// @author Carlos Batman
/// @deprecated use set-style-states instead
/// @example
///   /* the rules will expand to a declaration
///    * containing '.hot-and-pink', '.hot-and-pink:hover',
///    * '.hot-and-pink:active', '.hot-and-pink:focus' and '.hot-and-pink:visited'
///    */
///   .hot-and-pink {
///     @include reset-style-states {
///       border-bottom: hotpink;
///     }
///   }
@mixin reset-style-states($states: 'hover' 'active' 'focus' 'visited') {
  $selector: '&';

  @each $state in $states {
    $selector: $selector+',&:#{$state}';
  }

  #{$selector}{
    @content
  }
}

/// Set style states
/// Applies all rules inside a declaration to its selector and to all
/// combinations of it concatenated with items in a set of pseudoclasses.
/// This set pseudoclasses is provided through a parameter.
/// For each state provided, the mixin joins the ampersand with the psedoclass indicator ':'.
/// They are then concatenated to the main selector by commas
/// @param {Set of Strings} $states - the pseudoclasses the selector will be joined with in order to create the selector
/// @group Resets
/// @author Carlos Batman
/// @example
///   /* the rules will expand to a declaration
///    * containing '.hot-and-pink', '.hot-and-pink:hover',
///    * '.hot-and-pink:active', '.hot-and-pink:focus' and '.hot-and-pink:visited'
///    */
///   .hot-and-pink {
///     @include reset-style-states {
///       border-bottom: hotpink;
///     }
///   }
@mixin set-style-states($states: 'hover' 'active' 'focus' 'visited') {
  $selector: '&';

  @each $state in $states {
    $selector: $selector+',&:#{$state}';
  }

  #{$selector}{
    @content
  }
}

/// Reset Highlighting
/// Reset outline effect usually given to links and inputs. In chrome, for example, it is a blue blurry outline, whereas in firefox it can be a black outline.
/// Frameworks like bootstrap also tend to add some outline to active and focus elements,thus the additional $include-active-state, as well
/// @param  {Boolean} $include-active-state:false Whether you want the element to be centered horizontally or not
@mixin highlight-reset($include-active-state: false) {
  $selectors:':focus';

  @if $include-active-state {
    $selectors:':focus' ':active' ':active:focus';
  }

  @each $selector in $selectors {
    &#{$selector} {
      outline-style: none;
      box-shadow: none;
    }
  }
}

/// Clearfix helper
/// Use the below mixin for quickly clear fixing your HTML elements.
/// @link http://www.paulund.co.uk/sass-mixins-get-started-next-project
/// @example
/// .box
/// {
///   @include clearfix;
/// }
@mixin clearfix {
    *zoom: 1;
    &:before, &:after {
        content: ' ';
        display: table;
    }
    &:after {
        clear: both;
    }
}


/// Min-height reset
/// Forces the web page to have, at least, 100% of the window's height
/// @example
///   @include body-min-window-height();
/// @todo get a better name. The current one sucks
@mixin body-min-window-height() {
  html, body {
    margin: 0;
    height: 100%;
    min-height: 100%;
  }
}

/// Reset outline of bootstrap dont need to use it with any css scope 
/// @example
///   @include outline();
@mixin outline($selector:"a,.btn",$outline:none){
  #{$selector} { 
    &:hover,
    &:active,
    &:focus,
    &.active,
    &.focus,
    &.focus:active { outline: $outline; }
    &.active {
      &:focus,&.focus { outline: $outline; }
    }
  }
}