/**
 * A function to generate a centered wrapper with maximum width, based on whichever grid
 * @param  {String} $grid: "bootstrap"   The type of grid. May include "bootstrap" or "foundation"
 */
@mixin splash-wrapper($grid: "bootstrap") {
    width: 90%;
    max-width: 1170px;
    margin: auto;
}

/**
 * Add the necessary css to the ellipsis
 * @return {css} three rules for setting up an ellipsis
 * @source https://css-tricks.com/almanac/properties/t/text-overflow/
 */
@mixin ellipsis() {
  text-overflow: ellipsis;

  /* Required for text-overflow to do anything */
  white-space: nowrap;
  overflow: hidden;
}

/**
 * Create css to grayscale an image
 * Expects an image to be the affected element
 * It is a mixin adaptation of code provided by Karl Horky at http://www.karlhorky.com/2012/06/cross-browser-image-grayscale-with-css.html
 * @author Karl Horky
 */
@mixin grayscale($reset:false) {
  @if ($reset != false){
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale");
    filter: gray;
    -webkit-filter: grayscale(100%);
  }
  @else {
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
    -webkit-filter: grayscale(0%);
  }
}
/**
 * A background image of a default 1280x720 resolution depicting either an unsplash placeholder (default) or a placekitten. The cover effect is courtesy of Chris Coyier.
 * @param  {[number]} $image-width:  1280          [The default image width resolution]
 * @param  {[number]} $image-height: 720           [The default image height resolution]
 * @param  {[boolean]} $placekitten:  false         [if set to true, it will render a placekitten. Otherwise, it will get an unsplash placeholder instead]
 * @param  {[boolean]} $grayscale:    false         [description]
 * @param  {[url]} $image-url:    ""         [If set to anything other than "", this will become the url for the background image itself]
 * @return {[css]}                [set of css rules with background image and cover]
 * @url https://css-tricks.com/perfect-full-page-background-image/
 */
@mixin background-image($image-width: 1280, $image-height: 720, $placekitten: false, $grayscale: false, $image-url:""){
  $url: "";

  @if ($image-url != "") {
    $url: $image-url
  }
  @else {
    // check if placekitten or unsplash
    @if ($placekitten == true) {
      $url: $url + "http://placekitten.com";
    }
    @else {
      $url: $url + "https://unsplash.it";
    }
    // check if grayscale
    @if ($grayscale == true) {
      $url: $url + "/g";
    }
  }

  background: url(#{$url}/#{$image-width}/#{$image-height}) no-repeat center center fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}